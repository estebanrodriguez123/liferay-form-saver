<%--
/*
* Copyright (C) 2005-2016 Rivet Logic Corporation.
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; version 2
* of the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301, USA.
*/
--%>

<c:if test="<%= themeDisplay.isSignedIn() && !PropsValues.SESSION_DISABLED %>">

	<%
	String autoRememberMe = CookieKeys.getCookie(request, CookieKeys.REMEMBER_ME);
	//-------- RIVET CUSTOM CODE --------
	String screenName = UserLocalServiceUtil.getUser(PortalUtil.getUserId(request)).getScreenName();
	String rivetToken = "rivetFormSaver_" + screenName;
	//-------- RIVET CUSTOM CODE --------
	%>

	<c:if test="<%= Validator.isNull(autoRememberMe) %>">

		<%
		int sessionTimeout = PropsValues.SESSION_TIMEOUT;
		int sessionTimeoutMinute = sessionTimeout * (int)Time.MINUTE;
		int sessionTimeoutWarning = PropsValues.SESSION_TIMEOUT_WARNING;

		boolean sessionRedirectOnExpire = PropsValues.SESSION_TIMEOUT_REDIRECT_ON_EXPIRE;
		//-------- RIVET CUSTOM CODE --------
		//String sessionRedirectUrl = themeDisplay.getURLHome();
		String sessionRedirectUrl = themeDisplay.getPortalURL() + themeDisplay.getURLCurrent();

		long companyId = themeDisplay.getCompanyId();

		if (PrefsPropsUtil.getBoolean(companyId, PropsKeys.CAS_AUTH_ENABLED, PropsValues.CAS_AUTH_ENABLED) && PropsValues.CAS_LOGOUT_ON_SESSION_EXPIRATION) {
			sessionRedirectOnExpire = true;
			sessionRedirectUrl = PrefsPropsUtil.getString(companyId, PropsKeys.CAS_LOGOUT_URL, PropsValues.CAS_LOGOUT_URL);
		}
		else if (PrefsPropsUtil.getBoolean(companyId, PropsKeys.OPEN_SSO_AUTH_ENABLED, PropsValues.OPEN_SSO_AUTH_ENABLED) && PropsValues.OPEN_SSO_LOGOUT_ON_SESSION_EXPIRATION) {
			sessionRedirectOnExpire = true;
			sessionRedirectUrl = PrefsPropsUtil.getString(companyId, PropsKeys.OPEN_SSO_LOGOUT_URL, PropsValues.OPEN_SSO_LOGOUT_URL);
		}

		Calendar sessionTimeoutCal = CalendarFactoryUtil.getCalendar(timeZone);

		sessionTimeoutCal.add(Calendar.MILLISECOND, sessionTimeoutMinute);
		%>

		<aui:script use="liferay-session">
		
			Liferay.Session = new Liferay.SessionBase(
				{
					autoExtend: <%= PropsValues.SESSION_TIMEOUT_AUTO_EXTEND %>,
					sessionLength: <%= sessionTimeout %>,
					redirectOnExpire: <%= sessionRedirectOnExpire %>,
					redirectUrl: '<%= HtmlUtil.escapeJS(sessionRedirectUrl) %>',
					warningLength: <%= sessionTimeoutWarning %>
				}
			);
			
			//-------- RIVET CUSTOM CODE --------
			function saveItem(item, value) {
				localStorage.setItem('<%= rivetToken %>' + item, value);
			}
			
			function findItems() {
				var items = [];
				for(key in localStorage) {
					if(key.indexOf('<%= rivetToken %>') != -1) {
						items.push({ 'name': key.replace('<%= rivetToken %>',''), 'value': localStorage.getItem(key) });
						localStorage.removeItem(key);
					}
				}
				return items;
			}
		
			function checkFormSaverData() {
				return localStorage != undefined && localStorage.<%= rivetToken %> != undefined;
			}
			
			function saveForms() {
			    var inputs = A.all("input, textarea, select");
			    inputs.each(function(input){
			        var value = input.attr("value");
			        var id = input.attr("id");
			        var type = input.attr("type");
			        var name = input.attr("name");
			        if(id) {
				        if(type == 'radio') {
				        	if(input.attr('checked')) {
				        		saveItem(name, value);
				        	}
				        } else if(type == 'checkbox') {
				        	saveItem(id, input.attr('checked'));
				        } else {
				        	saveItem(id, value);
				        }
			        }
			    });
			}
			
			function restoreForms() {
			    var fields = findItems();
			    fields.forEach(function(field){
			        var input = A.one("[id='" + field.name + "']");
			        if(input) {
			        	if(input.attr("type") == "checkbox") {
			        		input.attr("checked", field.value == 'true');
			        	} else {
			        		input.attr("value", field.value);
			        	}
			        } else {
			       		var radio = A.one("input[name='"+field.name+"'][value='"+field.value+"']");
			            if(radio) {
			            	radio.attr("checked", true);
			            }
			        }
			    });
			}
			
			Liferay.Session.on('sessionStateChange', function(state) { 
				var currentState = state.newVal;
				if(currentState == "warned" && localStorage != undefined) {
					localStorage.<%= rivetToken %> = true;
					saveForms();
				}
			});
			
			A.ready(function(A) {
				if(checkFormSaverData()) {
					localStorage.removeItem('<%= rivetToken %>');
					restoreForms();
				}
			});
			
			//-------- RIVET CUSTOM CODE --------

			<c:if test="<%= sessionTimeoutWarning > 0 %>">
				Liferay.Session.plug(Liferay.SessionDisplay);
			</c:if>
		</aui:script>
	</c:if>
</c:if>
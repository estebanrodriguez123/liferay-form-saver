<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */
--%>

<%@ page import="com.liferay.portal.kernel.util.PropsKeys" %>
<%@ page import="com.liferay.portal.kernel.util.GetterUtil" %>

<c:if test="<%= !PropsValues.SESSION_DISABLED %>">

	<%
	String autoRememberMe = CookieKeys.getCookie(request, CookieKeys.REMEMBER_ME);
	
	String screenName = "";
	Long cookieExpires = 2 * 60 * 60 * 1000L;
	
	if(themeDisplay.isSignedIn()) {
		screenName = UserLocalServiceUtil.getUser(PortalUtil.getUserId(request)).getScreenName();
		cookieExpires = PrefsPropsUtil.getLong(themeDisplay.getCompanyId(), "rivetlogic.formsaver.expires", 
                GetterUtil.getLong(PropsUtil.get("rivetlogic.formsaver.expires")));
	}
	%>

	<c:if test="<%= !themeDisplay.isSignedIn() || Validator.isNull(autoRememberMe) %>">

		<%
		int sessionTimeout = PropsValues.SESSION_TIMEOUT;
		int sessionTimeoutMinute = sessionTimeout * (int)Time.MINUTE;
		int sessionTimeoutWarning = PropsValues.SESSION_TIMEOUT_WARNING;

		boolean sessionRedirectOnExpire = PropsValues.SESSION_TIMEOUT_REDIRECT_ON_EXPIRE;
		String sessionRedirectUrl = themeDisplay.getPortalURL() + themeDisplay.getURLCurrent();

		long companyId = themeDisplay.getCompanyId();

		if (PrefsPropsUtil.getBoolean(companyId, PropsKeys.CAS_AUTH_ENABLED, PropsValues.CAS_AUTH_ENABLED) && PropsValues.CAS_LOGOUT_ON_SESSION_EXPIRATION) {
			sessionRedirectOnExpire = true;
			sessionRedirectUrl = PrefsPropsUtil.getString(companyId, PropsKeys.CAS_LOGOUT_URL, PropsValues.CAS_LOGOUT_URL);
		}
		else if (PrefsPropsUtil.getBoolean(companyId, PropsKeys.OPEN_SSO_AUTH_ENABLED, PropsValues.OPEN_SSO_AUTH_ENABLED) && PropsValues.OPEN_SSO_LOGOUT_ON_SESSION_EXPIRATION) {
			sessionRedirectOnExpire = true;
			sessionRedirectUrl = PrefsPropsUtil.getString(companyId, PropsKeys.OPEN_SSO_LOGOUT_URL, PropsValues.OPEN_SSO_LOGOUT_URL);
		}

		Calendar sessionTimeoutCal = CalendarFactoryUtil.getCalendar(timeZone);

		sessionTimeoutCal.add(Calendar.MILLISECOND, sessionTimeoutMinute);
		%>

		<aui:script use="liferay-session">
		
			function appendCookie(name, value, cookie) {
			    if(cookie.length > 0) cookie += "&";
			    return cookie + name + "=" + value;
			}
			
			function saveFormsToCookie() {
			    var cookie = "";
			    var A = AUI();
			    var inputs = A.all("form input:not([type='hidden']),form textarea,form select");
			    inputs.each(function(input){
			        var value = input.attr("value");
			        var id = input.attr("id");
			        var type = input.attr("type");
			        var name = input.attr("name");
			        if(type == 'radio' || type == 'checkbox') {
			        	if(input.attr('checked')) {
			        		cookie = appendCookie(name, value, cookie);
			        	}
			        } else if(value) {
			        	cookie = appendCookie(name, value, cookie);
			        }
			    });
			    return cookie;
			}
			
			function restoreFormsFromCookie(cookie) {
			    var A = AUI();
			    var fields = cookie.split("&")
			    fields.forEach(function(field){
			        var pair = field.split("=");
			        var name = pair[0];
			        var value = pair[1];
			        var input = A.one("#" + name);
			        if(input) {
			        	if(input.attr("type") == "checkbox") {
			        		input.attr("checked", true);
			        	} else {
			        		input.attr("value", value);
			        	}
			        } else {
			       		var radio = A.one("input[name='"+name+"'][value='"+value+"']");
			            if(radio) {
			            	radio.attr("checked", true);
			            }
			        }
			    });
			}
			
			Liferay.Session = new Liferay.SessionBase(
				{
					autoExtend: <%= !themeDisplay.isSignedIn() || PropsValues.SESSION_TIMEOUT_AUTO_EXTEND %>,
					sessionLength: <%= sessionTimeout %>,
					redirectOnExpire: <%= sessionRedirectOnExpire %>,
					redirectUrl: '<%= HtmlUtil.escapeJS(sessionRedirectUrl) %>',
					warningLength: <%= sessionTimeoutWarning %>
				}
			);
			
			Liferay.Session.on('sessionStateChange', function(state) { 
				var A = AUI();
				
				var currentState = state.newVal;
				var formData = "";
				
				if(currentState == "warned") {
					var cookieBody = saveFormsToCookie();
					var cookieName = '<%=screenName%>' + "_formSaver";
					setCookie(cookieName, cookieBody);
				}
			});
			
			<c:if test="<%= themeDisplay.isSignedIn() && sessionTimeoutWarning > 0 %>">
				Liferay.Session.plug(Liferay.SessionDisplay);
			</c:if>
			
			function setCookie(cname, cvalue) {
				var A = AUI();
    			var date = new Date();
    			date.setTime(date.getTime() + <%=cookieExpires%> * 60 * 1000);
    			A.Cookie.set(cname, cvalue, { 'expires': date })
			};
			
			AUI().ready(function(A){
				var cookieName = '<%=screenName%>' + "_formSaver";
				if(A.Cookie.exists(cookieName)) {
					var cookieBody = A.Cookie.get(cookieName);
					restoreFormsFromCookie(cookieBody);
					A.Cookie.remove(cookieName);
				}
			});
			
		</aui:script>
	</c:if>
</c:if>